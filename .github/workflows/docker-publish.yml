name: Docker

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - master

env:
  IMAGE_NAME: docker-php-laravel-nginx

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        tag:
          [
            1.13.6-alpine,
            1.21.0-alpine
          ]
    steps:
      - uses: actions/checkout@v2

      - name: Check directory and Dockerfile
        run: test -d ${{ matrix.tag }} && test -f ${{ matrix.tag }}/Dockerfile

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build images
        run: |
          docker buildx build --load ./${{ matrix.tag }} --file ${{ matrix.tag }}/Dockerfile --tag $IMAGE_NAME:${{ matrix.tag }} --build-arg user=root
          docker buildx build --load ./${{ matrix.tag }} --file ${{ matrix.tag }}/Dockerfile --tag $IMAGE_NAME:${{ matrix.tag }}-rootless --build-arg user=1001

      - name: Test images
        run: |
          export TAG="${{ matrix.tag }}"
          export NGINX_VERSION="${TAG%-alpine}"

          ./tests/image_verify.sh --source tests/expectations --env-file tests/envfile --http-port 80 --user root $IMAGE_NAME:${{ matrix.tag }}
          ./tests/image_verify.sh --source tests/overrides/expectations --env-file tests/overrides/envfile --http-port 4321 --http-host nginx_default_server_name --user root $IMAGE_NAME:${{ matrix.tag }}

          ./tests/image_verify.sh --source tests/expectations --env-file tests/envfile --http-port 8080 --user "unknown uid 1001" $IMAGE_NAME:${{ matrix.tag }}-rootless
          ./tests/image_verify.sh --source tests/overrides/expectations --env-file tests/overrides/envfile --http-port 4321 --http-host nginx_default_server_name --user "unknown uid 1001" $IMAGE_NAME:${{ matrix.tag }}-rootless
  
  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    strategy:
      matrix:
        tag:
          [
            1.13.6-alpine,
            1.21.0-alpine
          ]
    steps:
      - uses: actions/checkout@v2

      - name: Log into GitHub Container Registry
        run: echo "${{ secrets.CR_PAT }}" | docker login https://ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Check directory and Dockerfile
        run: test -d ${{ matrix.tag }} && test -f ${{ matrix.tag }}/Dockerfile

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        
      - name: Build and push images to GitHub Container Registry
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
          # Change all uppercase to lowercase.
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          echo IMAGE_ID=$IMAGE_ID
          docker buildx build --push ./${{ matrix.tag }} --platform "linux/amd64,linux/arm64" --file ${{ matrix.tag }}/Dockerfile --tag $IMAGE_ID:${{ matrix.tag }} --build-arg user=root
          docker buildx build --push ./${{ matrix.tag }} --platform "linux/amd64,linux/arm64" --file ${{ matrix.tag }}/Dockerfile --tag $IMAGE_ID:${{ matrix.tag }}-rootless --build-arg user=1001
